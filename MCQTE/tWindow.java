
package convert;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

public class tWindow extends javax.swing.JPanel {

    File testFile = null;
    JFrame wind;
    
    private void convertTestFile() throws SQLException{
        
        //if(testFile.exists() == false)
        //    return;
        
        if(testFile == null)
            return;
        
	FileReader file = null;
	String qline;
        String opta;
        String optb;
        String optc;
        String optd;
        int corrAns;
        
        Connection con = null;
        Statement st = null;
        PreparedStatement pst = null;

        String url = "jdbc:derby:testdb;user=USER12;create=true";
        
        //System.setProperty("derby.system.home", 
        //            "home/mDbFolder");
        DriverManager.registerDriver( new org.apache.derby.jdbc.EmbeddedDriver());
        
        con = DriverManager.getConnection(url);
        st = con.createStatement();
        
        //st.executeUpdate("DROP TABLE USER12.TEST");
        
        st.executeUpdate("CREATE TABLE TEST (ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1)," 
                                            + "QLINE VARCHAR(150),"
                                            + "OPTA VARCHAR(30)," 
                                            + "OPTB VARCHAR(30)," 
                                            + "OPTC VARCHAR(30)," 
                                            + "OPTD VARCHAR(30)," 
                                            + "CORRANS INT"  
                                            + ")");
        
        pst = con.prepareStatement("INSERT INTO TEST(QLINE, OPTA, OPTB, OPTC, OPTD, CORRANS) VALUES(?,?,?,?,?,?)");
               
        try{
		file = new FileReader(testFile);
                BufferedReader reader = new BufferedReader(file); 
                while((qline = reader.readLine()) != null){
                    opta = reader.readLine();
                    optb = reader.readLine();
                    optc = reader.readLine();
                    optd = reader.readLine();
                    corrAns = Integer.parseInt(reader.readLine());
                    
                    pst.setString(1, qline);
                    pst.setString(2, opta);
                    pst.setString(3, optb);
                    pst.setString(4, optc);
                    pst.setString(5, optd);
                    pst.setInt(6, corrAns);
                    pst.executeUpdate();            
                    
            }
	}
        catch(FileNotFoundException e){
		throw new RuntimeException("File Not Found");
	}
	catch(Exception e){
		throw new RuntimeException(e);
	}
	finally{
		if(file != null){
			try{
				file.close();
			}
			catch(IOException e){}
                }
	}
        
        DriverManager.getConnection("jdbc:derby:;shutdown=true");
        
    }
    
    
    public tWindow(JFrame wind) {
        this.wind = wind;
        setSize(wind.getSize());
        initComponents();
        //fileChooser.setSize(700,500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
         
        float fontSize = 24;
        
        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        //fileChooser.setFont(fileChooser.getFont().deriveFont(fontSize));
        fileChooser.setPreferredSize(wind.getSize());
        fileChooser.setApproveButtonText("Load ");
        fileChooser.setApproveButtonToolTipText("Load the selected file as the test");
        fileChooser.setDialogTitle("Load Test");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        
    }// </editor-fold>                        

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {                                            
        //place for future manip
        
        testFile = fileChooser.getSelectedFile();
        try { 
            convertTestFile();
        } catch (SQLException ex) {
            Logger.getLogger(tWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        //fileChooser.setVisible(false);
        MainWindow mw = new MainWindow(wind);
        wind.add(mw);
        setVisible(false);
    }                                           

    /**
     * @param args the command line arguments
     */
    
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Window().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify                     
    private javax.swing.JFileChooser fileChooser;
    // End of variables declaration                   
}
