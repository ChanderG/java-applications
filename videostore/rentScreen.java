/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package videostore;

import java.beans.Beans;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author chander
 */
public class rentScreen extends JPanel {
    
    JFrame wind;
    int custId;
    int aid;
    int vid;
    
    int aprice = 0;
    int vprice = 0;
    
    int curra;
    int currv;
    
    private void completeTransaction() throws SQLException{
        
        //read the purchase table to get daily rental values and dec no of copies at hand
        Connection con = null;
        PreparedStatement pst = null;
        ResultSet rs = null;
        
        String url = "jdbc:derby:videostoredb;"; //create=true [user12 on USER12]";
        
        //System.setProperty("derby.system.home","");
        
        DriverManager.registerDriver( new org.apache.derby.jdbc.EmbeddedDriver());
        
        con = DriverManager.getConnection(url);
        pst = con.prepareStatement("SELECT * FROM USER12.PURCHASES WHERE ITEMNO = ?");
        
        pst.setInt(1, aid);
        
        rs = pst.executeQuery();
        
        if (rs.next()) {
                aprice = rs.getInt("DRENTALCHARGE");
                curra = rs.getInt("NOOFCOPIES");
        }        
        
        pst.setInt(1, vid);
        
        rs = pst.executeQuery();
        
        if (rs.next()) {
                vprice = rs.getInt("DRENTALCHARGE");
                currv = rs.getInt("NOOFCOPIES");
        }
        
        int tot = vprice + aprice;
        JOptionPane.showMessageDialog(this,"The daily rental charge for the audio: "
                + aprice + "\nThe daily rental charge for the video:" + vprice
                + "\nThe net daily amount is: " + tot );
        
        curra -= 1;
        currv -= 1;
        
        pst = con.prepareStatement("UPDATE USER12.PURCHASES SET NOOFCOPIES= ? WHERE ITEMNO = ? ");
        
        pst.setInt(1, curra);
        pst.setInt(2, aid);
        pst.executeUpdate();
        
        pst.setInt(1, currv);
        pst.setInt(2, vid);
        pst.executeUpdate();
        

        pst = con.prepareStatement("UPDATE USER12.CUSTOMERS SET ARENTED = ?,VRENTED = ?,DATEOFRENT = ? WHERE ID = ?");
       
        java.util.Date date = new java.util.Date();
        
        pst.setInt(1, aid);
        pst.setInt(2, vid);
        pst.setDate(3, new java.sql.Date(date.getTime()));
        pst.setInt(4, custId);
        
        pst.executeUpdate();
        DriverManager.getConnection("jdbc:derby:;shutdown=true");
    }
    
    public rentScreen(JFrame wind, int custId) {
        this.wind = wind;
        this.custId = custId;
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jdbc:derby:videostoredb;create=truePU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Purchases p");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        itemnoLabel = new javax.swing.JLabel();
        itemnoLabel1 = new javax.swing.JLabel();
        vitem = new javax.swing.JTextField();
        aitem = new javax.swing.JTextField();
        compButton = new javax.swing.JButton();
        refButton = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${itemno}"));
        columnBinding.setColumnName("Itemno");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${avtype}"));
        columnBinding.setColumnName("Avtype");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pname}"));
        columnBinding.setColumnName("Pname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${drentalcharge}"));
        columnBinding.setColumnName("Drentalcharge");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${format}"));
        columnBinding.setColumnName("Format");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${noofcopies}"));
        columnBinding.setColumnName("Noofcopies");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);

        masterScrollPane.setViewportView(masterTable);

        itemnoLabel.setText("Audio Itemno:");

        itemnoLabel1.setText("Video Itemno:");

        compButton.setText("Complete Transactions");
        compButton.addActionListener(formListener);

        refButton.setText("Refresh tables");
        refButton.addActionListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(itemnoLabel)
                                .addGap(26, 26, 26)
                                .addComponent(aitem, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(itemnoLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(vitem, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(compButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemnoLabel)
                    .addComponent(aitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemnoLabel1)
                    .addComponent(vitem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compButton))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == compButton) {
                rentScreen.this.compButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refButton) {
                rentScreen.this.refButtonActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void compButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compButtonActionPerformed
        aid = Integer.parseInt(aitem.getText());
        vid = Integer.parseInt(vitem.getText());
        try {
            completeTransaction();
        } catch (SQLException ex) {
            Logger.getLogger(rentScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        MainMenu mm = new MainMenu(wind);
        wind.add(mm);
        setVisible(false);
    }//GEN-LAST:event_compButtonActionPerformed

    private void refButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_refButtonActionPerformed

    

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aitem;
    private javax.swing.JButton compButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel itemnoLabel;
    private javax.swing.JLabel itemnoLabel1;
    private java.util.List<videostore.Purchases> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.persistence.Query query;
    private javax.swing.JButton refButton;
    private javax.swing.JTextField vitem;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
//    public static void main(String[] args) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(rentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(rentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(rentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(rentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                JFrame frame = new JFrame();
//                frame.setContentPane(new rentScreen());
//                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//                frame.pack();
//                frame.setVisible(true);
//            }
//        });
//    }
    
}
